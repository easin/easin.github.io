<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>kafka常用命令</title>
      <link href="/kafka-note/"/>
      <url>/kafka-note/</url>
      
        <content type="html"><![CDATA[<h3 id="1-单机安装"><a href="#1-单机安装" class="headerlink" title="1. 单机安装"></a>1. 单机安装</h3><h3 id="2-docker安装"><a href="#2-docker安装" class="headerlink" title="2. docker安装"></a>2. docker安装</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">zookeeper</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> zookeeper    <span class="token key atrule">image</span><span class="token punctuation">:</span> wurstmeister/zookeeper    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"2181:2181"</span>  <span class="token key atrule">kafkalog</span><span class="token punctuation">:</span>    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> kafkalog    <span class="token key atrule">image</span><span class="token punctuation">:</span> wurstmeister/kafka    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> zookeeper <span class="token punctuation">]</span>    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"9092:9092"</span>    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">KAFKA_ADVERTISED_HOST_NAME</span><span class="token punctuation">:</span> 10.1.35.57      <span class="token key atrule">KAFKA_CREATE_TOPICS</span><span class="token punctuation">:</span> <span class="token string">"log:1:1"</span>      <span class="token key atrule">KAFKA_ZOOKEEPER_CONNECT</span><span class="token punctuation">:</span> zookeeper<span class="token punctuation">:</span><span class="token number">2181</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> /var/run/docker.sock<span class="token punctuation">:</span>/var/run/docker.sock      <span class="token punctuation">-</span> ./kafka<span class="token punctuation">:</span>/kafka<span class="token comment" spellcheck="true">#docker-compose down</span><span class="token comment" spellcheck="true">#docker-compose up -d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-校验"><a href="#3-校验" class="headerlink" title="3. 校验"></a>3. 校验</h3><pre class="line-numbers language-sh"><code class="language-sh">docker exec -it kafkalog /bin/bash#配置环境变量bash-4.4# export ZK=zookeeper:2181bash-4.4# echo $ZKzookeeper:2181#运行Kafka提供的CLI系列工具,如果是docker已经自带KAFKA_HOME环境变量，并且映射到/opt/kafka#如果没有设置，可以设置export KAFKA_HOME=/software/kafka_2.11-0.11.0.3export PATH=$PATH:$KAFKA_HOME/binbash-4.4# $KAFKA_HOME/bin/kafka-topics.sh --create --topic topic --partitions 4 --zookeeper $ZK --replication-factor 1#提示：Created topic "topic".#查看主题$ZK 为主机:端口kafka-topics.sh --list --zookeeper $ZK#查看指定主题kafka-topics.sh --describe --zookeeper zookeeper:2181  --topic applog#从头消费 kafkalog是主机名或ipkafka-console-consumer.sh --bootstrap-server kafkalog:9092 --topic applog --from-beginning#创建全新topic，--replication-factor 必须小于 available brokers，--config前面一定要有空格kafka-topics.sh --create --topic test-topic --zookeeper $ZK \--config max.message.bytes=10485760 --partitions 1 --replication-factor 1#控制台作为生产者kafka-console-producer.sh --broker-list kafkalog:9092 --topic  test-topic#控制台作为消费者kafka-console-consumer.sh --bootstrap-server kafkalog:9092 --topic test-topic --from-beginning#查看topic信息kafka-topics.sh --describe --zookeeper zookeeper:2181 --topic test-topic#修改topic分区数kafka-topics.sh --zookeeper zookeeper:2181 -alter --partitions 10 --topic test-topic#为topic增加时间戳kafka-topics.sh --zookeeper zookeeper:2181  --topic test-topic --alter --config message.timestamp.type=LogAppendTime#删除主题bin/kafka-topics.sh --zookeeper localhost:2181 --delete --topic test-topic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-其他常用命令："><a href="#4-其他常用命令：" class="headerlink" title="4. 其他常用命令："></a>4. 其他常用命令：</h3><pre class="line-numbers language-sh"><code class="language-sh">#使用同一个配置文件，通过参数覆盖启动多个Broker> bin/kafka-server-start.sh -daemon config/server.properties --override broker.id=0 --override log.dirs=/tmp/kafka-logs-1 --override listeners=PLAINTEXT://:9092 --override advertised.listeners=PLAINTEXT://192.168.16.150:9092> bin/kafka-server-start.sh -daemon config/server.properties --override broker.id=1 --override log.dirs=/tmp/kafka-logs-2 --override listeners=PLAINTEXT://:9093 --override advertised.listeners=PLAINTEXT://192.168.16.150:9093创建主题：./kafka-topics.sh --zookeeper localhost:12181 --create --topic lfwer --partitions 10 --replication-factor 2增加主题分区数./kafka-topics.sh --zookeeper localhost:12181 --alter --topic lfwer --partitions 10删除主题在server.properties中增加设置，默认未开启delete.topic.enable=true重启kafka./kafka-server-stop.sh./kafka-server-start.sh -daemon ../config/server.properties执行删除./kafka-topics.sh --zookeeper localhost:12181 --delete --topic lfwer生产数据：./kafka-console-producer.sh  --topic lfwer --broker-list localhost:9092消费数据：./kafka-console-consumer.sh --topic lfwer --bootstrap-server localhost:9092查看主题在分区中的偏移量 （time为-1时表示最大值，time为-2时表示最小值）./kafka-run-class.sh kafka.tools.GetOffsetShell --topic lfwer --time -1 --broker-list localhost:9091 --partitions 0查看有多少个组./kafka-consumer-groups.sh --bootstrap-server localhost:9091 --list查看组消费情况./kafka-consumer-groups.sh --bootstrap-server localhost:9091 --describe --group my-group<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
